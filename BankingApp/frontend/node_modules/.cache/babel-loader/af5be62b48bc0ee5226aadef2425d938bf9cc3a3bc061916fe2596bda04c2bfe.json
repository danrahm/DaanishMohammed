{"ast":null,"code":"var _jsxFileName = \"/Users/daanish/Documents/GitHub/BankingApp/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport Login from './Login';\nimport AdminPage from './AdminPage';\nimport CustomerPage from './CustomerPage';\nimport EmployeePage from './EmployeePage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  role,\n  userRole\n}) => {\n  if (userRole !== role) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 16\n    }, this);\n  }\n  return children;\n};\n_c = ProtectedRoute;\nconst App = () => {\n  _s();\n  const [userRole, setUserRole] = useState(null);\n\n  // Assume userRole is set somewhere after login\n\n  // setUserRole('Administrator'); // Example of setting role\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          role: \"Administrator\",\n          userRole: userRole,\n          children: /*#__PURE__*/_jsxDEV(AdminPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/customer\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          role: \"Customer\",\n          userRole: userRole,\n          children: /*#__PURE__*/_jsxDEV(CustomerPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/employee\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          role: \"Employee\",\n          userRole: userRole,\n          children: /*#__PURE__*/_jsxDEV(EmployeePage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"C6bAPncfcaG2nuSIoL1CZL5BCqc=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProtectedRoute\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Route","Routes","Navigate","Login","AdminPage","CustomerPage","EmployeePage","jsxDEV","_jsxDEV","ProtectedRoute","children","role","userRole","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","setUserRole","useState","path","element","_c2","$RefreshReg$"],"sources":["/Users/daanish/Documents/GitHub/BankingApp/frontend/src/App.js"],"sourcesContent":["\nimport React from 'react';\n\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\n\nimport Login from './Login';\n\nimport AdminPage from './AdminPage';\n\nimport CustomerPage from './CustomerPage';\n\nimport EmployeePage from './EmployeePage';\n \nconst ProtectedRoute = ({ children, role, userRole }) => {\n\n    if (userRole !== role) {\n\n        return <Navigate to=\"/\" />;\n\n    }\n\n    return children;\n\n};\n \nconst App = () => {\n\n    const [userRole, setUserRole] = useState(null);\n \n    // Assume userRole is set somewhere after login\n\n    // setUserRole('Administrator'); // Example of setting role\n \n    return (\n\n        <Router>\n\n            <Routes>\n\n                <Route path=\"/\" element={<Login />} />\n\n                <Route path=\"/admin\" element={\n\n                    <ProtectedRoute role=\"Administrator\" userRole={userRole}>\n\n                        <AdminPage />\n\n                    </ProtectedRoute>\n\n                } />\n\n                <Route path=\"/customer\" element={\n\n                    <ProtectedRoute role=\"Customer\" userRole={userRole}>\n\n                        <CustomerPage />\n\n                    </ProtectedRoute>\n\n                } />\n\n                <Route path=\"/employee\" element={\n\n                    <ProtectedRoute role=\"Employee\" userRole={userRole}>\n\n                        <EmployeePage />\n\n                    </ProtectedRoute>\n\n                } />\n\n            </Routes>\n\n        </Router>\n\n    );\n\n};\n \nexport default App;\n\n "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}