{"ast":null,"code":"var _jsxFileName = \"/Users/daanish/Documents/GitHub/BankingApp/frontend/src/ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useUser } from './UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  role\n}) => {\n  _s();\n  const {\n    user\n  } = useUser();\n  if (!user || user.role !== role) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 16\n    }, this);\n  }\n  return children;\n};\n_s(ProtectedRoute, \"Q+JCVIy3JH0MXpFK+vm68eAxsAY=\", false, function () {\n  return [useUser];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","useUser","jsxDEV","_jsxDEV","ProtectedRoute","children","role","_s","user","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/daanish/Documents/GitHub/BankingApp/frontend/src/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useUser } from './UserContext';\n \nconst ProtectedRoute = ({ children, role }) => {\n    const { user } = useUser();\n \n    if (!user || user.role !== role) {\n        return <Navigate to=\"/login\" />;\n    }\n \n    return children;\n};\n \nexport default ProtectedRoute;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM;IAAEC;EAAK,CAAC,GAAGP,OAAO,CAAC,CAAC;EAE1B,IAAI,CAACO,IAAI,IAAIA,IAAI,CAACF,IAAI,KAAKA,IAAI,EAAE;IAC7B,oBAAOH,OAAA,CAACH,QAAQ;MAACS,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACnC;EAEA,OAAOR,QAAQ;AACnB,CAAC;AAACE,EAAA,CARIH,cAAc;EAAA,QACCH,OAAO;AAAA;AAAAa,EAAA,GADtBV,cAAc;AAUpB,eAAeA,cAAc;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}