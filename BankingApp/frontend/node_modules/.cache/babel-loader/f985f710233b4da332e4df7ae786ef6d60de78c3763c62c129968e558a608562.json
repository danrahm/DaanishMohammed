{"ast":null,"code":"var _jsxFileName = \"/Users/daanish/Documents/GitHub/BankingApp/frontend/src/components/employee.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./employee.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeePage = () => {\n  _s();\n  const [customerId, setCustomerId] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [targetCustomerId, setTargetCustomerId] = useState(\"\");\n  const [accountDetails, setAccountDetails] = useState(null);\n  const handleViewAccount = () => {\n    // Dummy data for account details\n    setAccountDetails({\n      savings: 5000,\n      checking: 2000,\n      investment: 15000,\n      transactions: [{\n        date: \"2024-07-01\",\n        type: \"Deposit\",\n        amount: 1000,\n        account: \"savings\"\n      }, {\n        date: \"2024-07-02\",\n        type: \"Withdrawal\",\n        amount: 500,\n        account: \"checking\"\n      }, {\n        date: \"2024-07-03\",\n        type: \"Transfer\",\n        amount: 2000,\n        account: \"investment\"\n      }]\n    });\n  };\n  const handleDeposit = async () => {\n    try {\n      const response = await fetch(`/customer/${customerId}/deposit`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          accountDetails,\n          amount: parseFloat(amount)\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(`Deposited $${amount} into ${customerId}'s account`);\n        console.log(data);\n      } else {\n        alert(data.error);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('An error occurred');\n    }\n  };\n  const handleWithdraw = () => {\n    // Dummy withdrawal logic\n    alert(`Withdrew $${amount} from ${customerId}'s account`);\n  };\n  const handleTransfer = () => {\n    // Dummy transfer logic\n    alert(`Transferred $${amount} from ${customerId} to ${targetCustomerId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"employee-container p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Employee Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Customer ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: customerId,\n          onChange: e => setCustomerId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mb-3\",\n        onClick: handleViewAccount,\n        children: \"View Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), accountDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"account-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Account Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Savings: $\", accountDetails.savings]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Checking: $\", accountDetails.checking]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Investment: $\", accountDetails.investment]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Transactions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: accountDetails.transactions.map((txn, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [txn.date, \" - \", txn.type, \" of $\", txn.amount, \" in \", txn.account]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"form-control\",\n          value: amount,\n          onChange: e => setAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success mb-3\",\n        onClick: handleDeposit,\n        children: \"Deposit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-warning mb-3\",\n        onClick: handleWithdraw,\n        children: \"Withdraw\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Target Customer ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: targetCustomerId,\n          onChange: e => setTargetCustomerId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-info\",\n        onClick: handleTransfer,\n        children: \"Transfer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(EmployeePage, \"FK594Q7K9xGJXD8EarMT3WGeaho=\");\n_c = EmployeePage;\nexport default EmployeePage;\nvar _c;\n$RefreshReg$(_c, \"EmployeePage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","EmployeePage","_s","customerId","setCustomerId","amount","setAmount","targetCustomerId","setTargetCustomerId","accountDetails","setAccountDetails","handleViewAccount","savings","checking","investment","transactions","date","type","account","handleDeposit","response","fetch","method","headers","body","JSON","stringify","parseFloat","data","json","ok","alert","console","log","error","handleWithdraw","handleTransfer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","map","txn","index","_c","$RefreshReg$"],"sources":["/Users/daanish/Documents/GitHub/BankingApp/frontend/src/components/employee.js"],"sourcesContent":["\nimport React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./employee.css\"\n\nconst EmployeePage = () => {\n  const [customerId, setCustomerId] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [targetCustomerId, setTargetCustomerId] = useState(\"\");\n  const [accountDetails, setAccountDetails] = useState(null);\n\n  const handleViewAccount = () => {\n    // Dummy data for account details\n    setAccountDetails({\n      savings: 5000,\n      checking: 2000,\n      investment: 15000,\n      transactions: [\n        {\n          date: \"2024-07-01\",\n          type: \"Deposit\",\n          amount: 1000,\n          account: \"savings\"\n        },\n        {\n          date: \"2024-07-02\",\n          type: \"Withdrawal\",\n          amount: 500,\n          account: \"checking\"\n        },\n        {\n          date: \"2024-07-03\",\n          type: \"Transfer\",\n          amount: 2000,\n          account: \"investment\"\n        }\n      ]\n    });\n  };\n\n  const handleDeposit = async () => {\n    try {\n      const response = await fetch(`/customer/${customerId}/deposit`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ accountDetails, amount: parseFloat(amount) }),\n      });\n \n      const data = await response.json();\n      if (response.ok) {\n        alert(`Deposited $${amount} into ${customerId}'s account`);\n        console.log(data);\n      } else {\n        alert(data.error);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('An error occurred');\n    }\n  };\n  const handleWithdraw = () => {\n    // Dummy withdrawal logic\n    alert(`Withdrew $${amount} from ${customerId}'s account`);\n  };\n\n  const handleTransfer = () => {\n    // Dummy transfer logic\n    alert(`Transferred $${amount} from ${customerId} to ${targetCustomerId}`);\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <div className=\"employee-container p-4\">\n        <h2>Employee Dashboard</h2>\n        <div className=\"form-group\">\n          <label>Customer ID</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={customerId}\n            onChange={(e) => setCustomerId(e.target.value)}\n          />\n        </div>\n        <button className=\"btn btn-primary mb-3\" onClick={handleViewAccount}>\n          View Account\n        </button>\n        {accountDetails && (\n          <div className=\"account-details\">\n            <h4>Account Details</h4>\n            <p>Savings: ${accountDetails.savings}</p>\n            <p>Checking: ${accountDetails.checking}</p>\n            <p>Investment: ${accountDetails.investment}</p>\n            <h4>Transactions</h4>\n            <ul>\n              {accountDetails.transactions.map((txn, index) => (\n                <li key={index}>\n                  {txn.date} - {txn.type} of ${txn.amount} in {txn.account}\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n        <div className=\"form-group\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            className=\"form-control\"\n            value={amount}\n            onChange={(e) => setAmount(e.target.value)}\n          />\n        </div>\n        <button className=\"btn btn-success mb-3\" onClick={handleDeposit}>\n          Deposit\n        </button>\n        <button className=\"btn btn-warning mb-3\" onClick={handleWithdraw}>\n          Withdraw\n        </button>\n        <div className=\"form-group\">\n          <label>Target Customer ID</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={targetCustomerId}\n            onChange={(e) => setTargetCustomerId(e.target.value)}\n          />\n        </div>\n        <button className=\"btn btn-info\" onClick={handleTransfer}>\n          Transfer\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default EmployeePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}