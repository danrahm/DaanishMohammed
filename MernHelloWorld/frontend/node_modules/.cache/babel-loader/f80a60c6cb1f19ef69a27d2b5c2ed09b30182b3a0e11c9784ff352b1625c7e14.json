{"ast":null,"code":"var _jsxFileName = \"/Users/daanish/Documents/GitHub/CS3750_HelloWorld_/frontend/src/components/hello_world.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HelloWorld = () => {\n  _s();\n  const [data, setData] = useState();\n  useEffect(() => {\n    async function getWord() {\n      const response = await fetch(\"http://localhost:4000/word\", {\n        method: \"GET\"\n      });\n      if (response.ok) {\n        const word = await response.json();\n        setData(word.word);\n      }\n    }\n    getWord();\n    return;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello, World!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Data from MongoDB: \", data]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(HelloWorld, \"WZ2PO9A64oHRexE1CE+yX3ebuoA=\");\n_c = HelloWorld;\nexport default HelloWorld;\nvar _c;\n$RefreshReg$(_c, \"HelloWorld\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","HelloWorld","_s","data","setData","getWord","response","fetch","method","ok","word","json","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/daanish/Documents/GitHub/CS3750_HelloWorld_/frontend/src/components/hello_world.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst HelloWorld = () => {\n    const [data, setData] = useState();\n\n    useEffect(() => {\n        async function getWord() {\n            const response = await fetch(\"http://localhost:4000/word\",\n            {\n                method: \"GET\"\n            }\n        );\n        if(response.ok){\n           const word = await response.json();\n           setData(word.word); \n        }\n        }  \n        getWord();\n\n        return;\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <h1>Hello, World!</h1>\n            <p>Data from MongoDB: {data}</p>\n        </div>\n    );\n};\n\nexport default HelloWorld;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,CAAC;EAElCD,SAAS,CAAC,MAAM;IACZ,eAAeQ,OAAOA,CAAA,EAAG;MACrB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,EACzD;QACIC,MAAM,EAAE;MACZ,CACJ,CAAC;MACD,IAAGF,QAAQ,CAACG,EAAE,EAAC;QACZ,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCP,OAAO,CAACM,IAAI,CAACA,IAAI,CAAC;MACrB;IACA;IACAL,OAAO,CAAC,CAAC;IAET;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAKY,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBb,OAAA;MAAAa,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBjB,OAAA;MAAAa,QAAA,GAAG,qBAAmB,EAACV,IAAI;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEd,CAAC;AAACf,EAAA,CA1BID,UAAU;AAAAiB,EAAA,GAAVjB,UAAU;AA4BhB,eAAeA,UAAU;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}