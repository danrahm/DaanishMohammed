{"ast":null,"code":"var _jsxFileName = \"/Users/daanish/Documents/GitHub/CS3750_Hangman/frontend/src/components/gameboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./gameboard.css\"; // Import the CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Gameboard = ({\n  username\n}) => {\n  _s();\n  const [word, setWord] = useState(\"\");\n  const [correctWord, setCorrectWord] = useState(\"\");\n  const [input, setInput] = useState(\"\");\n  const [numOfGuesses, setNumOfGuesses] = useState(0);\n  const [correctGuesses, setCorrectGuesses] = useState(0);\n  const [wrongGuesses, setWrongGuesses] = useState(0);\n  const [message, setMessage] = useState(\"\");\n  const [guessedLetters, setGuessedLetters] = useState([]);\n  const navigate = useNavigate();\n  const setWordLength = length => {\n    console.log(\"Word Length\", length);\n    localStorage.setItem(\"hangmanWordLength\", length);\n  };\n  const handleCorrectWord = () => {\n    localStorage.setItem(\"correctWord\", correctWord);\n  };\n  const fetchWord = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:4000/word\");\n      setWord(response.data.word);\n      setWordLength(response.data.wordLength);\n      setCorrectWord(response.data.actualword);\n      setNumOfGuesses(0);\n      setWrongGuesses(0);\n      setMessage(\"\");\n      setGuessedLetters([]);\n    } catch (error) {\n      console.error(\"Error fetching word:\", error);\n      setMessage(\"Error fetching word. Please try again.\");\n    }\n  };\n  useEffect(() => {\n    fetchWord();\n  }, []);\n  const handleLogout = () => {\n    localStorage.removeItem(\"hangmanUsername\"); // Remove username from localStorage\n    navigate(\"/\"); // Navigate back to login page\n  };\n  const handleGuess = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:4000/guess\", {\n        guess: input.toLowerCase() // Ensure input is lowercase\n      });\n      setWord(response.data.word);\n      setNumOfGuesses(response.data.numOfGuesses);\n      setWrongGuesses(response.data.wrongGuesses);\n      if (response.status === 200) {\n        setMessage(\"Good guess!\");\n        setCorrectGuesses(correctGuesses + 1);\n      } else if (response.status === 250) {\n        setMessage(\"Congratulations! You've guessed the word!\");\n        const res1 = await axios.get(\"http://localhost:4000/username\");\n        const res2 = await axios.post(\"http://localhost:4000/scores\", {\n          username,\n          score: numOfGuesses,\n          wordLength: word.length\n        });\n        handleCorrectWord();\n        console.log(\"Res 1\", res1, \"\\n Res2\", res2);\n        navigate(\"/highscore\");\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      if (error.response) {\n        const status = error.response.status;\n        if (status === 400) {\n          setMessage(\"Incorrect guess.\");\n          setWrongGuesses(error.response.data.wrongGuesses);\n          setNumOfGuesses(error.response.data.numOfGuesses);\n        } else if (status === 450) {\n          setMessage(\"Letter already guessed.\");\n        } else if (status === 451) {\n          setMessage(\"Game over!\");\n          setWord(error.response.data.word);\n          console.log(\"Game over!\", word);\n          const res1 = await axios.get(\"http://localhost:4000/username\");\n          const res2 = await axios.post(\"http://localhost:4000/scores\", {\n            username,\n            score: numOfGuesses,\n            wordLength: word.length\n          });\n          handleCorrectWord();\n          console.log(\"Res 1\", res1, \"\\n Res2\", res2);\n          setTimeout(function () {}, 2500);\n          navigate(\"/highscore\");\n        } else {\n          setMessage(\"An error occurred. Please try again.\");\n        }\n      } else {\n        setMessage(\"An error occurred. Please try again.\");\n      }\n      setNumOfGuesses(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.numOfGuesses) || numOfGuesses);\n    } finally {\n      setGuessedLetters([...guessedLetters, input]);\n      setInput(\"\");\n    }\n  };\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (input && /^[a-zA-Z]$/.test(input)) {\n      handleGuess();\n    } else {\n      setMessage(\"Please enter a valid letter.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"game-title\",\n      children: \"Hangman Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"game-info\",\n      children: [\"Welcome, \", username, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"word-display\",\n      style: {\n        textAlign: \"center\"\n      },\n      children: word\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: handleChange,\n          maxLength: \"1\",\n          className: \"guess-input\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"guess-buttons\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"guess-button\",\n            children: \"Guess\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"stat\",\n        children: [\"Correct Guesses: \", correctGuesses]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"stat\",\n        children: [\"Wrong Guesses: \", wrongGuesses]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"stat\",\n        children: [\"Total Guesses: \", numOfGuesses]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"stat guessed-letters\",\n        children: [\"Guessed Letters: \", guessedLetters.join(\", \")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"logout-button\",\n        children: \"Exit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(Gameboard, \"dZDFxR3sbnyfEp/IfJXA1+Tsxv0=\", false, function () {\n  return [useNavigate];\n});\n_c = Gameboard;\nexport default Gameboard;\nvar _c;\n$RefreshReg$(_c, \"Gameboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","Gameboard","username","_s","word","setWord","correctWord","setCorrectWord","input","setInput","numOfGuesses","setNumOfGuesses","correctGuesses","setCorrectGuesses","wrongGuesses","setWrongGuesses","message","setMessage","guessedLetters","setGuessedLetters","navigate","setWordLength","length","console","log","localStorage","setItem","handleCorrectWord","fetchWord","response","get","data","wordLength","actualword","error","handleLogout","removeItem","handleGuess","post","guess","toLowerCase","status","res1","res2","score","_error$response","_error$response$data","setTimeout","handleChange","e","target","value","handleSubmit","preventDefault","test","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","onSubmit","type","onChange","maxLength","required","join","display","justifyContent","onClick","_c","$RefreshReg$"],"sources":["/Users/daanish/Documents/GitHub/CS3750_Hangman/frontend/src/components/gameboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./gameboard.css\"; // Import the CSS file for styling\n\nconst Gameboard = ({ username }) => {\n  const [word, setWord] = useState(\"\");\n  const [correctWord, setCorrectWord] = useState(\"\");\n  const [input, setInput] = useState(\"\");\n  const [numOfGuesses, setNumOfGuesses] = useState(0);\n  const [correctGuesses, setCorrectGuesses] = useState(0);\n  const [wrongGuesses, setWrongGuesses] = useState(0);\n  const [message, setMessage] = useState(\"\");\n  const [guessedLetters, setGuessedLetters] = useState([]);\n  const navigate = useNavigate();\n\n  const setWordLength = (length) => {\n    console.log(\"Word Length\", length);\n    localStorage.setItem(\"hangmanWordLength\", length);\n  };\n\n  const handleCorrectWord = () => {\n    localStorage.setItem(\"correctWord\", correctWord);\n  };\n\n  const fetchWord = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:4000/word\");\n      setWord(response.data.word);\n      setWordLength(response.data.wordLength);\n      setCorrectWord(response.data.actualword);\n      setNumOfGuesses(0);\n      setWrongGuesses(0);\n      setMessage(\"\");\n      setGuessedLetters([]);\n    } catch (error) {\n      console.error(\"Error fetching word:\", error);\n      setMessage(\"Error fetching word. Please try again.\");\n    }\n  };\n\n  useEffect(() => {\n    fetchWord();\n  }, []);\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"hangmanUsername\"); // Remove username from localStorage\n    navigate(\"/\"); // Navigate back to login page\n  };\n\n  const handleGuess = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:4000/guess\", {\n        guess: input.toLowerCase() // Ensure input is lowercase\n      });\n      setWord(response.data.word);\n      setNumOfGuesses(response.data.numOfGuesses);\n      setWrongGuesses(response.data.wrongGuesses);\n      if (response.status === 200) {\n        setMessage(\"Good guess!\");\n        setCorrectGuesses(correctGuesses + 1);\n      } else if (response.status === 250) {\n        setMessage(\"Congratulations! You've guessed the word!\");\n        const res1 = await axios.get(\"http://localhost:4000/username\");\n        const res2 = await axios.post(\"http://localhost:4000/scores\", {\n          username,\n          score: numOfGuesses,\n          wordLength: word.length\n        });\n        handleCorrectWord();\n        console.log(\"Res 1\", res1, \"\\n Res2\", res2);\n        navigate(\"/highscore\");\n      }\n    } catch (error) {\n      if (error.response) {\n        const status = error.response.status;\n        if (status === 400) {\n          setMessage(\"Incorrect guess.\");\n          setWrongGuesses(error.response.data.wrongGuesses);\n          setNumOfGuesses(error.response.data.numOfGuesses);\n        } else if (status === 450) {\n          setMessage(\"Letter already guessed.\");\n        } else if (status === 451) {\n          setMessage(\"Game over!\");\n          setWord(error.response.data.word);\n          console.log(\"Game over!\", word);\n          const res1 = await axios.get(\"http://localhost:4000/username\");\n          const res2 = await axios.post(\"http://localhost:4000/scores\", {\n            username,\n            score: numOfGuesses,\n            wordLength: word.length\n          });\n          handleCorrectWord();\n          console.log(\"Res 1\", res1, \"\\n Res2\", res2);\n          setTimeout(function () {}, 2500);\n          navigate(\"/highscore\");\n        } else {\n          setMessage(\"An error occurred. Please try again.\");\n        }\n      } else {\n        setMessage(\"An error occurred. Please try again.\");\n      }\n      setNumOfGuesses(error.response?.data?.numOfGuesses || numOfGuesses);\n    } finally {\n      setGuessedLetters([...guessedLetters, input]);\n      setInput(\"\");\n    }\n  };\n\n  const handleChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (input && /^[a-zA-Z]$/.test(input)) {\n      handleGuess();\n    } else {\n      setMessage(\"Please enter a valid letter.\");\n    }\n  };\n\n  \n\n  return (\n    <div className=\"app-container\">\n      <h1 className=\"game-title\">Hangman Game</h1>\n      <p className=\"game-info\">Welcome, {username}!</p>\n      <p className=\"word-display\" style={{ textAlign: \"center\" }}>\n        {word}\n      </p>\n      <form onSubmit={handleSubmit}>\n        <div className=\"input-container\">\n          <input\n            type=\"text\"\n            value={input}\n            onChange={handleChange}\n            maxLength=\"1\"\n            className=\"guess-input\"\n            required\n          />\n          <div className=\"guess-buttons\">\n            <button type=\"submit\" className=\"guess-button\">\n              Guess\n            </button>\n            \n          </div>\n        </div>\n      </form>\n\n      <div className=\"game-stats\">\n        <p className=\"stat\">Correct Guesses: {correctGuesses}</p>\n        <p className=\"stat\">Wrong Guesses: {wrongGuesses}</p>\n        <p className=\"stat\">Total Guesses: {numOfGuesses}</p>\n        <p className=\"stat guessed-letters\">\n          Guessed Letters: {guessedLetters.join(\", \")}\n        </p>\n        <p className=\"message\">{message}</p>\n      </div>\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <button onClick={handleLogout} className=\"logout-button\">\n          Exit\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Gameboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}