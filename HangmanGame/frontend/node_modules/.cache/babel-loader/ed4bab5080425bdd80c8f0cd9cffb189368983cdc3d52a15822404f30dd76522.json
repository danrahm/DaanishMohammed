{"ast":null,"code":"var _jsxFileName = \"/Users/daanish/Documents/GitHub/CS3750_Hangman/frontend/src/components/gameboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport \"./gameboard.css\"; // Import the CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Gameboard = ({\n  username\n}) => {\n  _s();\n  const [word, setWord] = useState(\"\");\n  const [correctWord, setCorrectWord] = useState(\"\");\n  const [input, setInput] = useState(\"\");\n  const [numOfGuesses, setNumOfGuesses] = useState(0);\n  const [correctGuesses, setCorrectGuesses] = useState(0);\n  const [wrongGuesses, setWrongGuesses] = useState(0);\n  const [message, setMessage] = useState(\"\");\n  const [guessedLetters, setGuessedLetters] = useState([]);\n  const [gameEnded, setGameEnded] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const intialMount = useRef(true);\n  const [isResetting, setIsResetting] = useState(false);\n  const setWordLength = length => {\n    console.log(\"Word Length\", length);\n    localStorage.setItem(\"hangmanWordLength\", length);\n  };\n  const handleCorrectWord = () => {\n    localStorage.setItem(\"correctWord\", correctWord);\n  };\n  const fetchWord = useCallback(async () => {\n    try {\n      const response = await axios.get(\"http://localhost:4000/word\");\n      console.log(\"hello\");\n      setWord(response.data.word);\n      setWordLength(response.data.wordLength);\n      setCorrectWord(response.data.actualword);\n      setNumOfGuesses(0);\n      setWrongGuesses(0);\n      setMessage(\"\");\n      setGuessedLetters([]);\n      setGameEnded(false);\n    } catch (error) {\n      console.error(\"Error fetching word:\", error);\n      setMessage(\"Error fetching word. Please try again.\");\n    }\n  }, []);\n  useEffect(() => {\n    if (intialMount.current) {\n      fetchWord();\n      intialMount.current = false;\n    }\n  }, [fetchWord]);\n  useEffect(() => {\n    var _location$state;\n    if ((_location$state = location.state) !== null && _location$state !== void 0 && _location$state.reset) {\n      resetGame();\n    }\n  }, [location.state]);\n  const resetGame = () => {\n    fetchWord();\n    setInput(\"\");\n    setGuessedLetters([]);\n  };\n  const handleLogout = () => {\n    localStorage.removeItem(\"hangmanUsername\"); // Remove username from localStorage\n    navigate(\"/\"); // Navigate back to login page\n  };\n  const handleGuess = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:4000/guess\", {\n        guess: input.toLowerCase() // Ensure input is lowercase\n      });\n      setWord(response.data.word);\n      setNumOfGuesses(response.data.numOfGuesses);\n      setWrongGuesses(response.data.wrongGuesses);\n      if (response.status === 200) {\n        setMessage(\"Good guess!\");\n        setCorrectGuesses(correctGuesses + 1);\n      } else if (response.status === 250) {\n        setMessage(\"Congratulations! You've guessed the word!\");\n        const res1 = await axios.get(\"http://localhost:4000/username\");\n        const res2 = await axios.post(\"http://localhost:4000/scores\", {\n          username,\n          score: numOfGuesses,\n          wordLength: word.length\n        });\n        handleCorrectWord();\n        console.log(\"Res 1\", res1, \"\\n Res2\", res2);\n        setGameEnded(true);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      if (error.response) {\n        const status = error.response.status;\n        if (status === 400) {\n          setMessage(\"Incorrect guess.\");\n          setWrongGuesses(error.response.data.wrongGuesses);\n          setNumOfGuesses(error.response.data.numOfGuesses);\n        } else if (status === 450) {\n          setMessage(\"Letter already guessed.\");\n        } else if (status === 451) {\n          setMessage(\"Game over!\");\n          setWord(error.response.data.word);\n          console.log(\"Game over!\", word);\n          const res1 = await axios.get(\"http://localhost:4000/username\");\n          const res2 = await axios.post(\"http://localhost:4000/scores\", {\n            username,\n            score: numOfGuesses,\n            wordLength: word.length\n          });\n          handleCorrectWord();\n          console.log(\"Res 1\", res1, \"\\n Res2\", res2);\n          setTimeout(function () {}, 2500);\n          setGameEnded(true);\n        } else {\n          setMessage(\"An error occurred. Please try again.\");\n        }\n      } else {\n        setMessage(\"An error occurred. Please try again.\");\n      }\n      setNumOfGuesses(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.numOfGuesses) || numOfGuesses);\n    } finally {\n      setGuessedLetters([...guessedLetters, input]);\n      setInput(\"\");\n    }\n  };\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (input && /^[a-zA-Z]$/.test(input)) {\n      handleGuess();\n    } else {\n      setMessage(\"Please enter a valid letter.\");\n    }\n  };\n  const handleHighscore = () => {\n    navigate(\"/highscore\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"game-title\",\n      children: \"Hangman Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"game-info\",\n      children: [\"Welcome, \", username, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"word-display\",\n      style: {\n        textAlign: \"center\"\n      },\n      children: word\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: handleChange,\n          maxLength: \"1\",\n          className: \"guess-input\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"guess-buttons\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"guess-button\",\n            children: \"Guess\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"stat\",\n        children: [\"Correct Guesses: \", correctGuesses]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"stat\",\n        children: [\"Wrong Guesses: \", wrongGuesses]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"stat\",\n        children: [\"Total Guesses: \", numOfGuesses]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"stat guessed-letters\",\n        children: [\"Guessed Letters: \", guessedLetters.join(\", \")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      children: [gameEnded && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleHighscore,\n        className: \"highscore-button\",\n        children: \"Top 10 Highscores\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"logout-button\",\n        children: \"Exit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n_s(Gameboard, \"9oZFkIA5HMaM770Ag8OALBO6jCY=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Gameboard;\nexport default Gameboard;\nvar _c;\n$RefreshReg$(_c, \"Gameboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","axios","useLocation","useNavigate","jsxDEV","_jsxDEV","Gameboard","username","_s","word","setWord","correctWord","setCorrectWord","input","setInput","numOfGuesses","setNumOfGuesses","correctGuesses","setCorrectGuesses","wrongGuesses","setWrongGuesses","message","setMessage","guessedLetters","setGuessedLetters","gameEnded","setGameEnded","navigate","location","intialMount","isResetting","setIsResetting","setWordLength","length","console","log","localStorage","setItem","handleCorrectWord","fetchWord","response","get","data","wordLength","actualword","error","current","_location$state","state","reset","resetGame","handleLogout","removeItem","handleGuess","post","guess","toLowerCase","status","res1","res2","score","_error$response","_error$response$data","setTimeout","handleChange","e","target","value","handleSubmit","preventDefault","test","handleHighscore","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","onSubmit","type","onChange","maxLength","required","join","display","justifyContent","onClick","_c","$RefreshReg$"],"sources":["/Users/daanish/Documents/GitHub/CS3750_Hangman/frontend/src/components/gameboard.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport \"./gameboard.css\"; // Import the CSS file for styling\n\nconst Gameboard = ({ username }) => {\n  const [word, setWord] = useState(\"\");\n  const [correctWord, setCorrectWord] = useState(\"\");\n  const [input, setInput] = useState(\"\");\n  const [numOfGuesses, setNumOfGuesses] = useState(0);\n  const [correctGuesses, setCorrectGuesses] = useState(0);\n  const [wrongGuesses, setWrongGuesses] = useState(0);\n  const [message, setMessage] = useState(\"\");\n  const [guessedLetters, setGuessedLetters] = useState([]);\n  const [gameEnded, setGameEnded] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const intialMount = useRef(true);\n  const [isResetting,setIsResetting] = useState(false);\n  \n\n  const setWordLength = (length) => {\n    console.log(\"Word Length\", length);\n    localStorage.setItem(\"hangmanWordLength\", length);\n  };\n\n  const handleCorrectWord = () => {\n    localStorage.setItem(\"correctWord\", correctWord);\n  };\n\n  const fetchWord = useCallback ( async () => {\n    try {\n      const response = await axios.get(\"http://localhost:4000/word\");\n      console.log (\"hello\");\n      setWord(response.data.word);\n      setWordLength(response.data.wordLength);\n      setCorrectWord(response.data.actualword);\n      setNumOfGuesses(0);\n      setWrongGuesses(0);\n      setMessage(\"\");\n      setGuessedLetters([]);\n      setGameEnded(false);\n    } catch (error) {\n      console.error(\"Error fetching word:\", error);\n      setMessage(\"Error fetching word. Please try again.\");\n    }\n  } , [] );\n\n  useEffect(() => {\n    if (intialMount.current) {\n      fetchWord();\n      intialMount.current = false;\n    }\n   \n    \n  }, [fetchWord]);\n  useEffect(() => \n  {\n    if (location.state?.reset){\n      resetGame();\n    } }, [location.state]);\n    const resetGame = () => {\n      fetchWord();\n      setInput(\"\");\n      setGuessedLetters([]);\n    };\n  const handleLogout = () => {\n    localStorage.removeItem(\"hangmanUsername\"); // Remove username from localStorage\n    navigate(\"/\"); // Navigate back to login page\n  };\n\n  const handleGuess = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:4000/guess\", {\n        guess: input.toLowerCase() // Ensure input is lowercase\n      });\n      setWord(response.data.word);\n      setNumOfGuesses(response.data.numOfGuesses);\n      setWrongGuesses(response.data.wrongGuesses);\n      if (response.status === 200) {\n        setMessage(\"Good guess!\");\n        setCorrectGuesses(correctGuesses + 1);\n      } else if (response.status === 250) {\n        setMessage(\"Congratulations! You've guessed the word!\");\n        const res1 = await axios.get(\"http://localhost:4000/username\");\n        const res2 = await axios.post(\"http://localhost:4000/scores\", {\n          username,\n          score: numOfGuesses,\n          wordLength: word.length\n        });\n        handleCorrectWord();\n        console.log(\"Res 1\", res1, \"\\n Res2\", res2);\n        setGameEnded(true);\n      }\n    } catch (error) {\n      if (error.response) {\n        const status = error.response.status;\n        if (status === 400) {\n          setMessage(\"Incorrect guess.\");\n          setWrongGuesses(error.response.data.wrongGuesses);\n          setNumOfGuesses(error.response.data.numOfGuesses);\n        } else if (status === 450) {\n          setMessage(\"Letter already guessed.\");\n        } else if (status === 451) {\n          setMessage(\"Game over!\");\n          setWord(error.response.data.word);\n          console.log(\"Game over!\", word);\n          const res1 = await axios.get(\"http://localhost:4000/username\");\n          const res2 = await axios.post(\"http://localhost:4000/scores\", {\n            username,\n            score: numOfGuesses,\n            wordLength: word.length\n          });\n          handleCorrectWord();\n          console.log(\"Res 1\", res1, \"\\n Res2\", res2);\n          setTimeout(function () {}, 2500);\n          setGameEnded(true);\n        } else {\n          setMessage(\"An error occurred. Please try again.\");\n        }\n      } else {\n        setMessage(\"An error occurred. Please try again.\");\n      }\n      setNumOfGuesses(error.response?.data?.numOfGuesses || numOfGuesses);\n    } finally {\n      setGuessedLetters([...guessedLetters, input]);\n      setInput(\"\");\n    }\n  };\n\n  const handleChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (input && /^[a-zA-Z]$/.test(input)) {\n      handleGuess();\n    } else {\n      setMessage(\"Please enter a valid letter.\");\n    }\n  };\n\n  const handleHighscore = () => { \n    navigate(\"/highscore\");\n  }\n\n  return (\n    <div className=\"app-container\">\n      <h1 className=\"game-title\">Hangman Game</h1>\n      <p className=\"game-info\">Welcome, {username}!</p>\n      <p className=\"word-display\" style={{ textAlign: \"center\" }}>\n        {word}\n      </p>\n      <form onSubmit={handleSubmit}>\n        <div className=\"input-container\">\n          <input\n            type=\"text\"\n            value={input}\n            onChange={handleChange}\n            maxLength=\"1\"\n            className=\"guess-input\"\n            required\n          />\n          <div className=\"guess-buttons\">\n            <button type=\"submit\" className=\"guess-button\">\n              Guess\n            </button>\n            \n          </div>\n        </div>\n      </form>\n\n      <div className=\"game-stats\">\n        <p className=\"stat\">Correct Guesses: {correctGuesses}</p>\n        <p className=\"stat\">Wrong Guesses: {wrongGuesses}</p>\n        <p className=\"stat\">Total Guesses: {numOfGuesses}</p>\n        <p className=\"stat guessed-letters\">\n          Guessed Letters: {guessedLetters.join(\", \")}\n        </p>\n        <p className=\"message\">{message}</p>\n      </div>\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        {gameEnded && (\n          <button onClick={handleHighscore} className=\"highscore-button\">\n          Top 10 Highscores\n        </button>\n        )}\n        <button onClick={handleLogout} className=\"logout-button\">\n          Exit\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Gameboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AACvE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAO,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACoB,cAAc,EAAEC,iBAAiB,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACsB,YAAY,EAAEC,eAAe,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACwB,OAAO,EAAEC,UAAU,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC0B,cAAc,EAAEC,iBAAiB,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAC4B,SAAS,EAAEC,YAAY,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM8B,QAAQ,GAAGxB,WAAW,CAAC,CAAC;EAC9B,MAAMyB,QAAQ,GAAG1B,WAAW,CAAC,CAAC;EAC9B,MAAM2B,WAAW,GAAG9B,MAAM,CAAC,IAAI,CAAC;EAChC,MAAM,CAAC+B,WAAW,EAACC,cAAc,CAAC,GAAGlC,QAAQ,CAAC,KAAK,CAAC;EAGpD,MAAMmC,aAAa,GAAIC,MAAM,IAAK;IAChCC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEF,MAAM,CAAC;IAClCG,YAAY,CAACC,OAAO,CAAC,mBAAmB,EAAEJ,MAAM,CAAC;EACnD,CAAC;EAED,MAAMK,iBAAiB,GAAGA,CAAA,KAAM;IAC9BF,YAAY,CAACC,OAAO,CAAC,aAAa,EAAE1B,WAAW,CAAC;EAClD,CAAC;EAED,MAAM4B,SAAS,GAAGvC,WAAW,CAAG,YAAY;IAC1C,IAAI;MACF,MAAMwC,QAAQ,GAAG,MAAMvC,KAAK,CAACwC,GAAG,CAAC,4BAA4B,CAAC;MAC9DP,OAAO,CAACC,GAAG,CAAE,OAAO,CAAC;MACrBzB,OAAO,CAAC8B,QAAQ,CAACE,IAAI,CAACjC,IAAI,CAAC;MAC3BuB,aAAa,CAACQ,QAAQ,CAACE,IAAI,CAACC,UAAU,CAAC;MACvC/B,cAAc,CAAC4B,QAAQ,CAACE,IAAI,CAACE,UAAU,CAAC;MACxC5B,eAAe,CAAC,CAAC,CAAC;MAClBI,eAAe,CAAC,CAAC,CAAC;MAClBE,UAAU,CAAC,EAAE,CAAC;MACdE,iBAAiB,CAAC,EAAE,CAAC;MACrBE,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,OAAOmB,KAAK,EAAE;MACdX,OAAO,CAACW,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CvB,UAAU,CAAC,wCAAwC,CAAC;IACtD;EACF,CAAC,EAAG,EAAG,CAAC;EAERxB,SAAS,CAAC,MAAM;IACd,IAAI+B,WAAW,CAACiB,OAAO,EAAE;MACvBP,SAAS,CAAC,CAAC;MACXV,WAAW,CAACiB,OAAO,GAAG,KAAK;IAC7B;EAGF,CAAC,EAAE,CAACP,SAAS,CAAC,CAAC;EACfzC,SAAS,CAAC,MACV;IAAA,IAAAiD,eAAA;IACE,KAAAA,eAAA,GAAInB,QAAQ,CAACoB,KAAK,cAAAD,eAAA,eAAdA,eAAA,CAAgBE,KAAK,EAAC;MACxBC,SAAS,CAAC,CAAC;IACb;EAAE,CAAC,EAAE,CAACtB,QAAQ,CAACoB,KAAK,CAAC,CAAC;EACtB,MAAME,SAAS,GAAGA,CAAA,KAAM;IACtBX,SAAS,CAAC,CAAC;IACXzB,QAAQ,CAAC,EAAE,CAAC;IACZU,iBAAiB,CAAC,EAAE,CAAC;EACvB,CAAC;EACH,MAAM2B,YAAY,GAAGA,CAAA,KAAM;IACzBf,YAAY,CAACgB,UAAU,CAAC,iBAAiB,CAAC,CAAC,CAAC;IAC5CzB,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;EACjB,CAAC;EAED,MAAM0B,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMb,QAAQ,GAAG,MAAMvC,KAAK,CAACqD,IAAI,CAAC,6BAA6B,EAAE;QAC/DC,KAAK,EAAE1C,KAAK,CAAC2C,WAAW,CAAC,CAAC,CAAC;MAC7B,CAAC,CAAC;MACF9C,OAAO,CAAC8B,QAAQ,CAACE,IAAI,CAACjC,IAAI,CAAC;MAC3BO,eAAe,CAACwB,QAAQ,CAACE,IAAI,CAAC3B,YAAY,CAAC;MAC3CK,eAAe,CAACoB,QAAQ,CAACE,IAAI,CAACvB,YAAY,CAAC;MAC3C,IAAIqB,QAAQ,CAACiB,MAAM,KAAK,GAAG,EAAE;QAC3BnC,UAAU,CAAC,aAAa,CAAC;QACzBJ,iBAAiB,CAACD,cAAc,GAAG,CAAC,CAAC;MACvC,CAAC,MAAM,IAAIuB,QAAQ,CAACiB,MAAM,KAAK,GAAG,EAAE;QAClCnC,UAAU,CAAC,2CAA2C,CAAC;QACvD,MAAMoC,IAAI,GAAG,MAAMzD,KAAK,CAACwC,GAAG,CAAC,gCAAgC,CAAC;QAC9D,MAAMkB,IAAI,GAAG,MAAM1D,KAAK,CAACqD,IAAI,CAAC,8BAA8B,EAAE;UAC5D/C,QAAQ;UACRqD,KAAK,EAAE7C,YAAY;UACnB4B,UAAU,EAAElC,IAAI,CAACwB;QACnB,CAAC,CAAC;QACFK,iBAAiB,CAAC,CAAC;QACnBJ,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEuB,IAAI,EAAE,SAAS,EAAEC,IAAI,CAAC;QAC3CjC,YAAY,CAAC,IAAI,CAAC;MACpB;IACF,CAAC,CAAC,OAAOmB,KAAK,EAAE;MAAA,IAAAgB,eAAA,EAAAC,oBAAA;MACd,IAAIjB,KAAK,CAACL,QAAQ,EAAE;QAClB,MAAMiB,MAAM,GAAGZ,KAAK,CAACL,QAAQ,CAACiB,MAAM;QACpC,IAAIA,MAAM,KAAK,GAAG,EAAE;UAClBnC,UAAU,CAAC,kBAAkB,CAAC;UAC9BF,eAAe,CAACyB,KAAK,CAACL,QAAQ,CAACE,IAAI,CAACvB,YAAY,CAAC;UACjDH,eAAe,CAAC6B,KAAK,CAACL,QAAQ,CAACE,IAAI,CAAC3B,YAAY,CAAC;QACnD,CAAC,MAAM,IAAI0C,MAAM,KAAK,GAAG,EAAE;UACzBnC,UAAU,CAAC,yBAAyB,CAAC;QACvC,CAAC,MAAM,IAAImC,MAAM,KAAK,GAAG,EAAE;UACzBnC,UAAU,CAAC,YAAY,CAAC;UACxBZ,OAAO,CAACmC,KAAK,CAACL,QAAQ,CAACE,IAAI,CAACjC,IAAI,CAAC;UACjCyB,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE1B,IAAI,CAAC;UAC/B,MAAMiD,IAAI,GAAG,MAAMzD,KAAK,CAACwC,GAAG,CAAC,gCAAgC,CAAC;UAC9D,MAAMkB,IAAI,GAAG,MAAM1D,KAAK,CAACqD,IAAI,CAAC,8BAA8B,EAAE;YAC5D/C,QAAQ;YACRqD,KAAK,EAAE7C,YAAY;YACnB4B,UAAU,EAAElC,IAAI,CAACwB;UACnB,CAAC,CAAC;UACFK,iBAAiB,CAAC,CAAC;UACnBJ,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEuB,IAAI,EAAE,SAAS,EAAEC,IAAI,CAAC;UAC3CI,UAAU,CAAC,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC;UAChCrC,YAAY,CAAC,IAAI,CAAC;QACpB,CAAC,MAAM;UACLJ,UAAU,CAAC,sCAAsC,CAAC;QACpD;MACF,CAAC,MAAM;QACLA,UAAU,CAAC,sCAAsC,CAAC;MACpD;MACAN,eAAe,CAAC,EAAA6C,eAAA,GAAAhB,KAAK,CAACL,QAAQ,cAAAqB,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBnB,IAAI,cAAAoB,oBAAA,uBAApBA,oBAAA,CAAsB/C,YAAY,KAAIA,YAAY,CAAC;IACrE,CAAC,SAAS;MACRS,iBAAiB,CAAC,CAAC,GAAGD,cAAc,EAAEV,KAAK,CAAC,CAAC;MAC7CC,QAAQ,CAAC,EAAE,CAAC;IACd;EACF,CAAC;EAED,MAAMkD,YAAY,GAAIC,CAAC,IAAK;IAC1BnD,QAAQ,CAACmD,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMC,YAAY,GAAIH,CAAC,IAAK;IAC1BA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClB,IAAIxD,KAAK,IAAI,YAAY,CAACyD,IAAI,CAACzD,KAAK,CAAC,EAAE;MACrCwC,WAAW,CAAC,CAAC;IACf,CAAC,MAAM;MACL/B,UAAU,CAAC,8BAA8B,CAAC;IAC5C;EACF,CAAC;EAED,MAAMiD,eAAe,GAAGA,CAAA,KAAM;IAC5B5C,QAAQ,CAAC,YAAY,CAAC;EACxB,CAAC;EAED,oBACEtB,OAAA;IAAKmE,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BpE,OAAA;MAAImE,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5CxE,OAAA;MAAGmE,SAAS,EAAC,WAAW;MAAAC,QAAA,GAAC,WAAS,EAAClE,QAAQ,EAAC,GAAC;IAAA;MAAAmE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACjDxE,OAAA;MAAGmE,SAAS,EAAC,cAAc;MAACM,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAN,QAAA,EACxDhE;IAAI;MAAAiE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACJxE,OAAA;MAAM2E,QAAQ,EAAEZ,YAAa;MAAAK,QAAA,eAC3BpE,OAAA;QAAKmE,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9BpE,OAAA;UACE4E,IAAI,EAAC,MAAM;UACXd,KAAK,EAAEtD,KAAM;UACbqE,QAAQ,EAAElB,YAAa;UACvBmB,SAAS,EAAC,GAAG;UACbX,SAAS,EAAC,aAAa;UACvBY,QAAQ;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACFxE,OAAA;UAAKmE,SAAS,EAAC,eAAe;UAAAC,QAAA,eAC5BpE,OAAA;YAAQ4E,IAAI,EAAC,QAAQ;YAACT,SAAS,EAAC,cAAc;YAAAC,QAAA,EAAC;UAE/C;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAEPxE,OAAA;MAAKmE,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBpE,OAAA;QAAGmE,SAAS,EAAC,MAAM;QAAAC,QAAA,GAAC,mBAAiB,EAACxD,cAAc;MAAA;QAAAyD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzDxE,OAAA;QAAGmE,SAAS,EAAC,MAAM;QAAAC,QAAA,GAAC,iBAAe,EAACtD,YAAY;MAAA;QAAAuD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrDxE,OAAA;QAAGmE,SAAS,EAAC,MAAM;QAAAC,QAAA,GAAC,iBAAe,EAAC1D,YAAY;MAAA;QAAA2D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrDxE,OAAA;QAAGmE,SAAS,EAAC,sBAAsB;QAAAC,QAAA,GAAC,mBACjB,EAAClD,cAAc,CAAC8D,IAAI,CAAC,IAAI,CAAC;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC,eACJxE,OAAA;QAAGmE,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAEpD;MAAO;QAAAqD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACNxE,OAAA;MAAKyE,KAAK,EAAE;QAAEQ,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE;MAAS,CAAE;MAAAd,QAAA,GACvDhD,SAAS,iBACRpB,OAAA;QAAQmF,OAAO,EAAEjB,eAAgB;QAACC,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAAC;MAEjE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACP,eACDxE,OAAA;QAAQmF,OAAO,EAAErC,YAAa;QAACqB,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAEzD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACrE,EAAA,CA7LIF,SAAS;EAAA,QAUIH,WAAW,EACXD,WAAW;AAAA;AAAAuF,EAAA,GAXxBnF,SAAS;AA+Lf,eAAeA,SAAS;AAAC,IAAAmF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}