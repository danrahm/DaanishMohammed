{"ast":null,"code":"var _jsxFileName = \"/Users/daanish/Documents/GitHub/CS3750_Hangman/frontend/src/components/Gameboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Gameboard = ({\n  username\n}) => {\n  _s();\n  const [word, setWord] = useState(\"\");\n  const [input, setInput] = useState(\"\");\n  const [numOfGuesses, setNumOfGuesses] = useState(0);\n  const [wrongGuesses, setWrongGuesses] = useState(0);\n  const [message, setMessage] = useState(\"\");\n  const [guessedLetters, setGuessedLetters] = useState([]);\n  useEffect(() => {\n    fetchWord();\n  }, []);\n  const fetchWord = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:4000/word\");\n      setWord(response.data.word);\n      setNumOfGuesses(0);\n      setWrongGuesses(0);\n      setMessage(\"\");\n      setGuessedLetters([]);\n    } catch (error) {\n      console.error(\"Error fetching word:\", error);\n      setMessage(\"Error fetching word. Please try again.\");\n    }\n  };\n  const handleGuess = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:4000/guess\", {\n        guess: input\n      });\n      if (response.status === 200 || response.status === 250) {\n        setWord(response.data.word);\n        setNumOfGuesses(response.data.numOfGuesses);\n        setWrongGuesses(response.data.wrongGuesses);\n        setMessage(response.status === 200 ? \"Good guess!\" : \"Congratulations! You've guessed the word!\");\n        if (response.status === 250) {\n          resetGame();\n        }\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      if (error.response) {\n        const status = error.response.status;\n        if (status === 400) {\n          setMessage(\"Incorrect guess.\");\n          setWrongGuesses(error.response.data.wrongGuesses);\n        } else if (status === 450) {\n          setMessage(\"Letter already guessed.\");\n        } else if (status === 451) {\n          setMessage(\"Game over!\");\n          setWord(error.response.data.word); // Show the correct word if the game is over\n\n          resetGame();\n        } else {\n          setMessage(\"An error occurred. Please try again.\");\n        }\n      } else {\n        setMessage(\"An error occurred. Please try again.\");\n      }\n      setNumOfGuesses(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.numOfGuesses) || numOfGuesses);\n    } finally {\n      setGuessedLetters([...guessedLetters, input]);\n      setInput(\"\");\n    }\n  };\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (input) {\n      handleGuess();\n    }\n  };\n  const resetGame = () => {\n    fetchWord();\n    setInput(\"\");\n    setGuessedLetters([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hangman Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Welcome, \", username, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: word\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: handleChange,\n        maxLength: \"1\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Guess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Guesses: \", numOfGuesses]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Wrong Guesses: \", wrongGuesses]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Guessed Letters: \", guessedLetters.join(\", \")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n_s(Gameboard, \"FC51p/1/Ljm15fqkZ6ckWEwlMdc=\");\n_c = Gameboard;\nexport default Gameboard;\nvar _c;\n$RefreshReg$(_c, \"Gameboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Gameboard","username","_s","word","setWord","input","setInput","numOfGuesses","setNumOfGuesses","wrongGuesses","setWrongGuesses","message","setMessage","guessedLetters","setGuessedLetters","fetchWord","response","get","data","error","console","handleGuess","post","guess","status","resetGame","_error$response","_error$response$data","handleChange","e","target","value","handleSubmit","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","maxLength","required","join","_c","$RefreshReg$"],"sources":["/Users/daanish/Documents/GitHub/CS3750_Hangman/frontend/src/components/Gameboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport axios from \"axios\";\n \nconst Gameboard = ({ username }) => {\n\n  const [word, setWord] = useState(\"\");\n\n  const [input, setInput] = useState(\"\");\n\n  const [numOfGuesses, setNumOfGuesses] = useState(0);\n\n  const [wrongGuesses, setWrongGuesses] = useState(0);\n\n  const [message, setMessage] = useState(\"\");\n\n  const [guessedLetters, setGuessedLetters] = useState([]);\n \n  useEffect(() => {\n\n    fetchWord();\n\n  }, []);\n \n  const fetchWord = async () => {\n\n    try {\n\n      const response = await axios.get(\"http://localhost:4000/word\");\n\n      setWord(response.data.word);\n\n      setNumOfGuesses(0);\n\n      setWrongGuesses(0);\n\n      setMessage(\"\");\n\n      setGuessedLetters([]);\n\n    } catch (error) {\n\n      console.error(\"Error fetching word:\", error);\n\n      setMessage(\"Error fetching word. Please try again.\");\n\n    }\n\n  };\n \n  const handleGuess = async () => {\n\n    try {\n\n      const response = await axios.post(\"http://localhost:4000/guess\", { guess: input });\n \n      if (response.status === 200 || response.status === 250) {\n\n        setWord(response.data.word);\n\n        setNumOfGuesses(response.data.numOfGuesses);\n\n        setWrongGuesses(response.data.wrongGuesses);\n\n        setMessage(response.status === 200 ? \"Good guess!\" : \"Congratulations! You've guessed the word!\");\n\n        if (response.status === 250) {\n\n          resetGame();\n\n        }\n\n      }\n\n    } catch (error) {\n\n      if (error.response) {\n\n        const status = error.response.status;\n\n        if (status === 400) {\n\n          setMessage(\"Incorrect guess.\");\n\n          setWrongGuesses(error.response.data.wrongGuesses);\n\n        } else if (status === 450) {\n\n          setMessage(\"Letter already guessed.\");\n\n        } else if (status === 451) {\n\n          setMessage(\"Game over!\");\n\n          setWord(error.response.data.word); // Show the correct word if the game is over\n\n          resetGame();\n\n        } else {\n\n          setMessage(\"An error occurred. Please try again.\");\n\n        }\n\n      } else {\n\n        setMessage(\"An error occurred. Please try again.\");\n\n      }\n\n      setNumOfGuesses(error.response?.data?.numOfGuesses || numOfGuesses);\n\n    } finally {\n\n      setGuessedLetters([...guessedLetters, input]);\n\n      setInput(\"\");\n\n    }\n\n  };\n \n  const handleChange = (e) => {\n\n    setInput(e.target.value);\n\n  };\n \n  const handleSubmit = (e) => {\n\n    e.preventDefault();\n\n    if (input) {\n\n      handleGuess();\n\n    }\n\n  };\n \n  const resetGame = () => {\n\n    fetchWord();\n\n    setInput(\"\");\n\n    setGuessedLetters([]);\n\n  };\n \n  return (\n\n    <div className=\"App\">\n\n      <h1>Hangman Game</h1>\n\n      <p>Welcome, {username}!</p>\n\n      <p>{word}</p>\n\n      <form onSubmit={handleSubmit}>\n\n        <input\n\n          type=\"text\"\n\n          value={input}\n\n          onChange={handleChange}\n\n          maxLength=\"1\"\n\n          required\n\n        />\n\n        <button type=\"submit\">Guess</button>\n\n      </form>\n\n      <p>Guesses: {numOfGuesses}</p>\n\n      <p>Wrong Guesses: {wrongGuesses}</p>\n\n      <p>Guessed Letters: {guessedLetters.join(\", \")}</p>\n\n      <p>{message}</p>\n\n    </div>\n\n  );\n\n};\n \nexport default Gameboard;\n\n "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}