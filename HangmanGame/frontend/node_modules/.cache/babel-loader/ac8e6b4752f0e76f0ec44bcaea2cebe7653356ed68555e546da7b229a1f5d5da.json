{"ast":null,"code":"var _jsxFileName = \"/Users/daanish/Documents/GitHub/CS3750_Hangman/frontend/src/components/hello_world.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HelloWorld = () => {\n  _s();\n  const [data, setData] = useState();\n  const [form, setForm] = useState(\"\");\n  useEffect(() => {\n    async function getWord() {\n      const response = await fetch(\"http://localhost:4000/word\", {\n        method: \"GET\"\n      });\n      if (response.ok) {\n        const word = await response.json();\n        setData(word.word);\n      }\n    }\n    getWord();\n    return;\n  }, []);\n\n  // Used to update the Json object from the form\n  function updateForm(jsonObj) {\n    return setForm(prevJsonObj => {\n      return {\n        ...prevJsonObj,\n        ...jsonObj\n      };\n    });\n  }\n  async function onSubmit(e) {\n    let response;\n    e.preventDefault();\n    const letterGuess = {\n      guess: form.guess\n    };\n    response = await fetch(\"http://localhost:4000/guess\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(letterGuess)\n    }).catch(error => {\n      window.alert(error);\n      return;\n    });\n    if (response.status === 200) {\n      const updatedString = await response.json();\n      setData(updatedString.word);\n    } else if (response.status === 250) {\n      const updatedString = await response.json();\n      setData(updatedString.word);\n      window.alert(\"Thats the correct answer!\");\n    } else {\n      window.alert(\"THis is where the error from the back end happends\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello, World!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Data from MongoDB: \", data]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"User Guess\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Guess: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"guess\",\n          value: form.guess,\n          maxLength: \"1\",\n          onkeydown: \"return /[a-z]/i.test(event.key)\",\n          onChange: e => updateForm({\n            guess: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit Guess\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(HelloWorld, \"nwnVzdflmlqt0JSGVrlo7Kr4Ey4=\");\n_c = HelloWorld;\nexport default HelloWorld;\nvar _c;\n$RefreshReg$(_c, \"HelloWorld\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","HelloWorld","_s","data","setData","form","setForm","getWord","response","fetch","method","ok","word","json","updateForm","jsonObj","prevJsonObj","onSubmit","e","preventDefault","letterGuess","guess","headers","body","JSON","stringify","catch","error","window","alert","status","updatedString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","maxLength","onkeydown","onChange","target","_c","$RefreshReg$"],"sources":["/Users/daanish/Documents/GitHub/CS3750_Hangman/frontend/src/components/hello_world.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst HelloWorld = () => {\n    const [data, setData] = useState();\n    const [form, setForm] = useState(\"\");\n\n    useEffect(() => {\n        async function getWord() {\n            const response = await fetch(\"http://localhost:4000/word\",\n            {\n                method: \"GET\"\n            }\n        );\n        if(response.ok){\n           const word = await response.json();\n           setData(word.word); \n        }\n        }  \n        getWord();\n\n        return;\n    }, []);\n\n    // Used to update the Json object from the form\n    function updateForm(jsonObj){\n        return setForm((prevJsonObj) => {\n            return {...prevJsonObj, ...jsonObj};\n        });\n    }\n\n    async function onSubmit(e) {\n        let response;\n        e.preventDefault();\n\n        const letterGuess = {\n            guess: form.guess\n        };\n\n        response = await fetch(\"http://localhost:4000/guess\",\n        {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\" : \"application/json\",\n            },\n            body: JSON.stringify(letterGuess),\n        })\n        .catch(error => {\n            window.alert(error);\n            return;\n        });\n\n        if(response.status === 200){\n            const updatedString = await response.json();\n            setData(updatedString.word);\n        } else if(response.status === 250) {\n            const updatedString = await response.json();\n            setData(updatedString.word);\n            window.alert(\"Thats the correct answer!\");\n        } else {\n            window.alert(\"THis is where the error from the back end happends\");\n        }\n    }\n\n\n    return (\n        <div className=\"container\">\n            <h1>Hello, World!</h1>\n            <p>Data from MongoDB: {data}</p>\n\n        <h3>User Guess</h3>\n        <form onSubmit={onSubmit}>\n            <div>\n                <label>Guess: </label>\n                <input\n                    type=\"text\"\n                    id=\"guess\"\n                    value={form.guess}\n                    maxLength={\"1\"}\n                    onkeydown=\"return /[a-z]/i.test(event.key)\"\n                    onChange={(e) => updateForm({ guess: e.target.value})}\n                />\n            </div>\n            <br/>\n            <div>\n                <input\n                    type=\"submit\"\n                    value=\"Submit Guess\"\n                />\n            </div>\n        </form>\n        </div>\n    );\n};\n\nexport default HelloWorld;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}