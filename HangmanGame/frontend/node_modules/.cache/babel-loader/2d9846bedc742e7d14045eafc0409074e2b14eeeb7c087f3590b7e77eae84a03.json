{"ast":null,"code":"var _jsxFileName = \"/Users/daanish/Documents/GitHub/CS3750_Hangman/frontend/src/components/gameboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Gameboard = ({\n  username\n}) => {\n  _s();\n  const [word, setWord] = useState(\"\");\n  const [input, setInput] = useState(\"\");\n  const [numOfGuesses, setNumOfGuesses] = useState(0);\n  const [wrongGuesses, setWrongGuesses] = useState(0);\n  const [message, setMessage] = useState(\"\");\n  const [guessedLetters, setGuessedLetters] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchWord();\n  }, []);\n  const fetchWord = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:4000/word\");\n      setWord(response.data.word);\n      setNumOfGuesses(0);\n      setWrongGuesses(0);\n      setMessage(\"\");\n      setGuessedLetters([]);\n    } catch (error) {\n      console.error(\"Error fetching word:\", error);\n      setMessage(\"Error fetching word. Please try again.\");\n    }\n  };\n  const handleGuess = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:4000/guess\", {\n        guess: input\n      });\n      if (response.status === 200 || response.status === 250) {\n        setWord(response.data.word);\n        setNumOfGuesses(response.data.numOfGuesses);\n        setWrongGuesses(response.data.wrongGuesses);\n        if (response.status === 200) {\n          setMessage(\"Good guess!\");\n        } else if (response.status === 250) {\n          setMessage(\"Congratulations! You've guessed the word!\");\n          // Calls the back end for session\n          let session = await fetch(\"http://localhost:4000/username\", {\n            method: \"GET\"\n          }).catch(error => {\n            window.alert(error);\n            return;\n          });\n          // Adds player to high score\n          let highscore = await fetch(\"http://localhost:4000/scores\", {\n            method: \"GET\"\n          }).catch(error => {\n            window.alert(error);\n            return;\n          });\n          //Navigates to highscore front end\n          navigate(\"/highscore\");\n        }\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      if (error.response) {\n        const status = error.response.status;\n        if (status === 400) {\n          setMessage(\"Incorrect guess.\");\n          setWrongGuesses(error.response.data.wrongGuesses);\n          setNumOfGuesses(error.response.data.numOfGuesses);\n        } else if (status === 450) {\n          setMessage(\"Letter already guessed.\");\n        } else if (status === 451) {\n          setMessage(\"Game over!\");\n          setWord(error.response.data.word); // Show the correct word if the game is over\n          navigate(\"/highscore\");\n        } else {\n          setMessage(\"An error occurred. Please try again.\");\n        }\n      } else {\n        setMessage(\"An error occurred. Please try again.\");\n      }\n      setNumOfGuesses(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.numOfGuesses) || numOfGuesses);\n    } finally {\n      setGuessedLetters([...guessedLetters, input]);\n      setInput(\"\");\n    }\n  };\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (input) {\n      handleGuess();\n    }\n  };\n  const resetGame = () => {\n    fetchWord();\n    setInput(\"\");\n    setGuessedLetters([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hangman Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Welcome, \", username, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: word\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: handleChange,\n        maxLength: \"1\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Guess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetGame,\n      children: \"Reset Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Correct Guesses: \", numOfGuesses]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Wrong Guesses: \", wrongGuesses]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Guessed Letters: \", guessedLetters.join(\", \")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 1\n  }, this);\n};\n_s(Gameboard, \"5U0rMkQRM5ksim68IAbLXv9d0DM=\", false, function () {\n  return [useNavigate];\n});\n_c = Gameboard;\nexport default Gameboard;\nvar _c;\n$RefreshReg$(_c, \"Gameboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","Gameboard","username","_s","word","setWord","input","setInput","numOfGuesses","setNumOfGuesses","wrongGuesses","setWrongGuesses","message","setMessage","guessedLetters","setGuessedLetters","navigate","fetchWord","response","get","data","error","console","handleGuess","post","guess","status","session","fetch","method","catch","window","alert","highscore","_error$response","_error$response$data","handleChange","e","target","value","handleSubmit","preventDefault","resetGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","maxLength","required","onClick","join","_c","$RefreshReg$"],"sources":["/Users/daanish/Documents/GitHub/CS3750_Hangman/frontend/src/components/gameboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router\";\n\n\nconst Gameboard = ({ username }) => {\n  const [word, setWord] = useState(\"\");\n  const [input, setInput] = useState(\"\");\n  const [numOfGuesses, setNumOfGuesses] = useState(0);\n  const [wrongGuesses, setWrongGuesses] = useState(0);\n  const [message, setMessage] = useState(\"\");\n  const [guessedLetters, setGuessedLetters] = useState([]);\n  \n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchWord();\n  }, []);\n \n  const fetchWord = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:4000/word\");\n      setWord(response.data.word);\n      setNumOfGuesses(0);\n      setWrongGuesses(0);\n      setMessage(\"\");\n      setGuessedLetters([]);\n    } catch (error) {\n      console.error(\"Error fetching word:\", error);\n      setMessage(\"Error fetching word. Please try again.\");\n    }\n  };\n \n  const handleGuess = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:4000/guess\", { guess: input });\n \n      if (response.status === 200 || response.status === 250) {\n        setWord(response.data.word);\n        setNumOfGuesses(response.data.numOfGuesses);\n        setWrongGuesses(response.data.wrongGuesses);\n        if(response.status === 200){\n          setMessage(\"Good guess!\");\n        } else if (response.status === 250){\n          setMessage(\"Congratulations! You've guessed the word!\");\n          // Calls the back end for session\n          let session = await fetch(\"http://localhost:4000/username\",\n            {\n                method: \"GET\"\n            })\n            .catch(error => {\n                window.alert(error);\n                return;\n            });\n          // Adds player to high score\n          let highscore = await fetch(\"http://localhost:4000/scores\",\n            {\n                method: \"GET\"\n            })\n            .catch(error => {\n                window.alert(error);\n                return;\n            });\n          //Navigates to highscore front end\n          navigate(\"/highscore\");\n        }\n        \n      }\n    } catch (error) {\n      if (error.response) {\n        const status = error.response.status;\n        if (status === 400) {\n          setMessage(\"Incorrect guess.\");\n          setWrongGuesses(error.response.data.wrongGuesses);\n          setNumOfGuesses(error.response.data.numOfGuesses);\n        } else if (status === 450) {\n          setMessage(\"Letter already guessed.\");\n        } else if (status === 451) {\n          setMessage(\"Game over!\");\n          setWord(error.response.data.word); // Show the correct word if the game is over\n          navigate(\"/highscore\")\n          \n        } else {\n          setMessage(\"An error occurred. Please try again.\");\n        }\n      } else {\n        setMessage(\"An error occurred. Please try again.\");\n      }\n      setNumOfGuesses(error.response?.data?.numOfGuesses || numOfGuesses);\n    } finally {\n      setGuessedLetters([...guessedLetters, input]);\n      setInput(\"\");\n    }\n  };\n \n  const handleChange = (e) => {\n    setInput(e.target.value);\n  };\n \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (input) {\n      handleGuess();\n    }\n  };\n \n  const resetGame = () => {\n    fetchWord();\n    setInput(\"\");\n    setGuessedLetters([]);\n  };\n \n  return (\n<div className=\"App\">\n<h1>Hangman Game</h1>\n<p>Welcome, {username}!</p>\n<p>{word}</p>\n<form onSubmit={handleSubmit}>\n<input\n          type=\"text\"\n          value={input}\n          onChange={handleChange}\n          maxLength=\"1\"\n          required\n        />\n<button type=\"submit\">Guess</button>\n</form>\n<button onClick={resetGame}>Reset Game</button>\n<p>Correct Guesses: {numOfGuesses}</p>\n<p>Wrong Guesses: {wrongGuesses}</p>\n<p>Guessed Letters: {guessedLetters.join(\", \")}</p>\n<p>{message}</p>\n</div>\n  );\n};\n \nexport default Gameboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}